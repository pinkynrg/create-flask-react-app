# Use an official Python runtime as a parent image
FROM python:3.12-slim

# Set environment variables to ensure the Python output is sent straight to the terminal without buffering
ENV PYTHONDONTWRITEBYTECODE=1
ENV PYTHONUNBUFFERED=1

RUN apt update && apt install -y build-essential

# Set the working directory in the container
WORKDIR /app

# Install Poetry
RUN pip install --no-cache-dir poetry

# Copy the pyproject.toml and poetry.lock files to the working directory
COPY pyproject.toml poetry.lock ./

# Install project dependencies
RUN poetry config virtualenvs.create false \
    && poetry install --no-interaction --no-ansi

# Copy the current directory contents into the container at /app
COPY . .

# Expose the port that your Flask app runs on
EXPOSE 5000

# Define the command to run your application
CMD ["poetry", "run", "python", "-m", "server.app"]
